generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id                      Int                   @id @default(autoincrement())
  name                    String
  description             String
  price                   Float
  image                   String?
  parts                   ProductPart[]
  cartsWhereThisProductIs ShoppingCartProduct[]
}

model ProductPart {
  id       Int                 @id @default(autoincrement())
  name     String
  products Product[]
  options  ProductPartOption[]
}

model ProductPartOption {
  id                           Int                   @id @default(autoincrement())
  name                         String
  stock                        Int
  part                         ProductPart           @relation(fields: [partId], references: [id])
  partId                       Int
  incompatibleOptions          ProductPartOption[]   @relation("IncompatibleOptions")
  // This is the way Prisma handles symmetric many-to-many self relations, we don't care about this field
  symmetricIncompatibleOptions ProductPartOption[]   @relation("IncompatibleOptions")
  carts                        ShoppingCartProduct[]
}

model ShoppingCart {
  id       Int                   @id @default(autoincrement())
  status   String                @default("open")
  products ShoppingCartProduct[]
}

model ShoppingCartProduct {
  id              Int                 @id @default(autoincrement())
  product         Product             @relation(fields: [productId], references: [id])
  productId       Int
  shoppingCart    ShoppingCart        @relation(fields: [shoppingCartId], references: [id])
  shoppingCartId  Int
  selectedOptions ProductPartOption[]
  @@unique([shoppingCartId, productId])
}
